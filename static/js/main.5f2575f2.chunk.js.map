{"version":3,"sources":["modules/counter.js","modules/todos.js","modules/index.js","components/styled/PageHeader.js","components/styled/PageBox.js","container/Level/Lv1React/index.js","container/Level/Lv2JSX/Hello.js","container/Level/Lv2JSX/Lv2JSX.js","components/TransMd/CodeBlock.js","components/TransMd/Renderer.js","components/TransMd/index.js","components/AutoTab/AutoTab.js","container/Level/Lv2JSX/index.js","container/Level/Lv2JSX/Sources.js","container/Level/Lv3Component/index.js","container/Skills/MobX/Counter.js","container/Skills/MobX/MobX.js","container/Skills/MobX/stores/counter.js","container/Skills/MobX/index.js","container/Skills/MobX/Sources.js","container/Level/Lv4LifeCycle/LifeCycleSample.js","container/Level/Lv4LifeCycle/ErrorBoundary.js","container/Level/Lv4LifeCycle/Lv4LifeCycle.js","container/Level/Lv4LifeCycle/index.js","container/Level/Lv4LifeCycle/Sources.js","container/Skills/MaterialUi/MaterialButton.js","container/Skills/MaterialUi/MaterialTable.js","container/Skills/MaterialUi/MaterialUi.js","container/Skills/MaterialUi/index.js","container/Skills/MaterialUi/Sources.js","container/Skills/ReactRouterDom/Home.js","container/Skills/ReactRouterDom/About.js","container/Skills/ReactRouterDom2/WithRouterSample.js","container/Skills/ReactRouterDom/Profile.js","container/Skills/ReactRouterDom/Profiles.js","container/Skills/ReactRouterDom/ReactRouterDom.js","container/Skills/ReactRouterDom/index.js","container/Skills/ReactRouterDom/Sources.js","container/Skills/ReactRouterDom2/HistorySample.js","container/Skills/ReactRouterDom2/ReactRouterDom2.js","container/Skills/ReactRouterDom2/index.js","container/Skills/ReactRouterDom2/Sources.js","components/Counter.js","container/Skills/Redux/containers/CounterContainer.js","components/Todos.js","container/Skills/Redux/containers/TodosContainer.js","container/Skills/Redux/Redux.js","container/Skills/Redux/index.js","container/Skills/Redux/Sources.js","components/Navigation/AppShell.js","App.js","serviceWorker.js","index.js"],"names":["INCREASE","DECREASE","initialState","number","counter","state","type","CHANGE_INPUT","INSERT","TOGGLE","REMOVE","id","input","todos","text","done","action","concat","todo","map","filter","rootReducer","combineReducers","HeaderContents","styled","span","PageHeader","props","Text","style","display","justifyContent","MainBox","children","Box","div","className","ContentsBox","CodeBox","MdBox","index","padding","width","paddingTop","Hello","Lv2JSX","backgroundColor","color","fontSize","SyntaxHighlighter","registerLanguage","jsx","CodeBlock","this","language","value","duotoneDark","PureComponent","defaultProps","InlineCodeBlock","background","BlockQuoteBlock","border","borderRadius","paddingLeft","margin","TableCellBlock","textAlign","align","isHeader","borderLeft","borderRight","borderBottom","ReactMarkdown","require","contents","height","overflow","source","skipHtml","escapeHtml","renderers","code","tableCell","inlineCode","blockquote","paddingBottom","AutoTab","menu","customStyle","customTab","defaultIndex","startTabIndex","list","key","TransMd","Counter","inject","stores","increase","decrease","observer","onClick","Component","observable","MobX","LifeCycleSample","myRef","handleClick","setState","console","log","nextProps","nextState","prevProps","prevState","snapshot","ref","ErrorBoundary","error","info","Lv4LifeCycle","Math","floor","random","toString","MaterialButton","Button","variant","customers","Row","TableRow","TableCell","src","image","alt","name","birthday","gender","job","MaterialTable","classes","Paper","root","Table","table","TableHead","TableBody","c","withStyles","theme","marginTop","spacing","unit","overflowX","minWidth","MaterialUi","Home","About","location","showDetail","qs","parse","search","ignoreQueryPrefix","detail","withRouter","match","history","JSON","stringify","rows","readOnly","push","data","leehaehun","nickname","description","kimjihye","Profile","username","params","profile","Profiles","activeStyle","to","active","path","exact","render","component","ReactRouterDom","HistorySample","handleGoBack","goBack","handleGoHome","unlock","block","unblock","ReactRouterDom2","pathname","onIncrease","onDecrease","connect","TodoItem","onToggle","onRemove","checked","textDecoration","Todos","onChangeInput","onInsert","onSubmit","e","preventDefault","onChange","target","changeInput","insert","toggle","remove","Redux","AppShell","handleDrawerToggle","AppBar","position","IconButton","menuButton","Drawer","open","MenuItem","Link","RouterLink","React","cloneElement","flexGrow","marginRight","App","Lv1React","Lv3Component","Boolean","window","hostname","store","createStore","composeWithDevTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mUAEMA,EAAW,mBACXC,EAAW,mBAOXC,EAAe,CACjBC,OAAS,GAkBEC,MAff,WAAgD,IAA/BC,EAA8B,uDAAtBH,EACrB,QAD2C,wCAC5BI,MACX,KAAKN,EACD,MAAO,CACHG,OAASE,EAAMF,OAAS,GAEhC,KAAKF,EACD,MAAO,CACHE,OAASE,EAAMF,OAAS,GAEhC,QACI,OAAOE,I,QCxBbE,EAAe,qBACfC,EAAS,eACTC,EAAS,eACTC,EAAS,eASXC,EAAK,EAqBHT,EAAe,CACjBU,MAAQ,GACRC,MAAQ,CACJ,CACIF,GAAK,EACLG,KAAO,kCACPC,MAAO,GAEX,CACIJ,GAAK,EACLG,KAAO,8CACPC,MAAO,KAkCJF,MA7Bf,WAA6C,IAA9BR,EAA6B,uDAArBH,EAAcc,EAAO,uCACxC,OAAOA,EAAOV,MACV,KAAKC,EACD,OAAO,eACAF,EADP,CAEIO,MAAQI,EAAOJ,QAEvB,KAAKJ,EACD,OAAO,eACAH,EADP,CAEIQ,MAAQR,EAAMQ,MAAMI,OAAOD,EAAOE,QAE1C,KAAKT,EACD,OAAO,eACAJ,EADP,CAEIQ,MAAQR,EAAMQ,MAAMM,KAAI,SAAAD,GAAI,OACxBA,EAAKP,KAAOK,EAAOL,GAAnB,eAA6BO,EAA7B,CAAmCH,MAAQG,EAAKH,OAASG,OAGrE,KAAKR,EACD,OAAO,eACAL,EADP,CAEIQ,MAAQR,EAAMQ,MAAMO,QAAO,SAAAF,GAAI,OAAIA,EAAKP,KAAOK,EAAOL,QAE9D,QACI,OAAON,IChEJgB,EALKC,0BAAgB,CAChClB,UACAS,U,mUCLJ,IAAMU,EAAiBC,IAAOC,KAAV,KAqBLC,EAVI,SAACC,GAAW,IACnBC,EAASD,EAATC,KAER,OACI,yBAAKC,MAAO,CAACC,QAAU,OAAQC,eAAiB,WAC5C,kBAACR,EAAD,KAAiBK,K,izBCb7B,IAAMI,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACRC,EAAMV,IAAOW,IAAV,KAOT,OACI,kBAACD,EAAD,CAAKE,UAAU,YACVH,IAMPI,EAAc,SAAC,GAAgB,IAAfJ,EAAc,EAAdA,SACZC,EAAMV,IAAOW,IAAV,KAMT,OACI,kBAACD,EAAD,CAAKE,UAAU,YACX,kBAAC,EAAD,CAAYR,KAAK,UAChBK,IAKPK,EAAU,SAAC,GAAgB,IAAfL,EAAc,EAAdA,SACRC,EAAMV,IAAOW,IAAV,KAQT,OACI,kBAACD,EAAD,CAAKE,UAAU,YACX,kBAAC,EAAD,CAAYR,KAAK,SAChBK,IAKPM,EAAQ,SAAC,GAAgB,IAAfN,EAAc,EAAdA,SACNC,EAAMV,IAAOW,IAAV,KAMT,OACI,kBAACD,EAAD,CAAKE,UAAU,YACX,kBAAC,EAAD,CAAYR,KAAK,aAChBK,ICXEO,EAjDD,WACV,OACI,kBAAC,EAAD,KACI,yBAAKX,MAAO,CAACY,QAAQ,QACjB,0CAEA,4CACA,uBAAGZ,MAAO,CAACa,MAAQ,UAAnB,weAKA,yDACA,2BAAON,UAAU,aACb,+BACI,4BACI,4CACA,4CACA,6CAEJ,4BACI,uCACA,uCACA,8BAEJ,4BACI,mCACA,qCACA,8BAEJ,4BACI,kDACA,sCACA,qFAKZ,0BAAMP,MAAO,CAACc,WAAa,SAA3B,gDACA,4BACI,oLACA,oOACA,yKCxCLC,MAJf,WACI,OAAO,iECuBIC,EAtBA,WASX,OACI,6BACI,wCACA,kBAAC,EAAD,MAGA,yBAAKhB,MAbC,CACViB,gBAAkB,QAClBC,MAAQ,OACRC,SAAW,GACXP,QAAU,SALD,SAeL,yBAAKL,UAAU,YAAf,c,iECbZa,IAAkBC,iBAAiB,MAAOC,K,IAEpCC,E,iLAUM,IAAD,EACqBC,KAAK1B,MAAzB2B,EADD,EACCA,SAAUC,EADX,EACWA,MAClB,OACE,kBAAC,IAAD,CAAmBD,SAAUA,EAAUzB,MAAO2B,eAC3CD,O,GAdeE,iBAAlBL,EAMGM,aAAe,CACpBJ,SAAU,MAaCF,QC1Bf,SAASO,EAAgBhC,GACrB,OACI,0BAAME,MAAO,CAAE+B,WAAa,SACvBjC,EAAM4B,OAKnB,SAASM,EAAgBlC,GACrB,OACI,yBAAKE,MAAO,CAACiC,OAAS,kBAAmBC,aAAe,GAAIC,YAAc,GAAIC,OAAS,IAClFtC,EAAMM,UAenB,SAASiC,EAAevC,GACpB,IAAIE,EAAQ,CACRsC,UAAYxC,EAAMyC,MAAQzC,EAAMyC,MAAQ,SACxC3B,QAAU,GAYd,OATId,EAAM0C,UACNxC,EAAM+B,WAAa,OACnB/B,EAAMiC,OAAS,iBACfjC,EAAMyC,WAAa,EACnBzC,EAAM0C,YAAc,GAEpB1C,EAAM2C,aAAe,iBAIrB,wBAAI3C,MAAOA,GACNF,EAAMM,UC3CnB,I,aAAMwC,GAAgBC,EAAQ,KAsBflC,GApBD,SAACb,GAAW,IACdgD,EAAahD,EAAbgD,SAER,OACI,yBAAK9C,MAAO,CAACa,MAAO,OAAQkC,OAAS,QAASC,SAAS,WACnD,kBAACJ,GAAD,CACIK,OAAQH,GAAYA,EACpBI,UAAU,EACVC,YAAY,EACZC,UAAW,CACPC,KAAO9B,EACP+B,UAAYjB,EACZkB,WAAazB,EACb0B,WAAaxB,O,SCN3BhC,I,cAAM,CACRyD,cAAc,SA0BHC,GAvBC,SAAC5D,GAAW,IACpB6D,EAAwC7D,EAAxC6D,KAAMb,EAAkChD,EAAlCgD,SAASc,EAAyB9D,EAAzB8D,YAAYC,EAAa/D,EAAb+D,UAElC,OACO,kBAAC,KAAD,CACC7D,MAAoB,MAAb4D,EAAkBA,EAAY5D,GACrC8D,aAAchE,EAAMiE,cAAgBjE,EAAMiE,cAAgB,GACvD,kBAAC,KAAD,KACLJ,EAAKrE,KAAI,SAAC0E,EAAMrD,GAAP,OACL,kBAAC,KAAD,CAAKX,MAAkB,MAAX6D,EAAgBA,EAAU,GAAII,IAAKtD,GAAQqD,OAGrDlB,EAASxD,KAAI,SAAC0E,EAAMrD,GAAP,OACV,kBAAC,KAAD,CAAUsD,IAAKtD,GAAQqD,QCJxBrD,GAlBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KAAa,kBAAC,EAAD,OACb,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIgD,KAAM,CAAC,YAAY,YACnBb,SAAU,CACN,kBAACoB,GAAD,CAASpB,SCfnB,yrBDgBU,kBAACoB,GAAD,CAASpB,SCgBpB,8JDZD,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SCwBd,mnDClBCnC,GAjBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,8CAEA,+CAEA,qDAGJ,kBAAC,EAAD,KAAS,kBAACuD,GAAD,CAASpB,SAhBhB,mCAiBF,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SAjBd,qC,SCoBCqB,GApBdC,cAAO,SAAAC,GAAM,MAAK,CACjB/F,OAAQ+F,EAAO9F,QAAQD,OACvBgG,SAAUD,EAAO9F,QAAQ+F,SACzBC,SAAUF,EAAO9F,QAAQgG,Y,GAG1BC,a,mLAEW,IAAD,EACgChD,KAAK1B,MAApCxB,EADD,EACCA,OAAQgG,EADT,EACSA,SAAUC,EADnB,EACmBA,SAC1B,OACE,6BACE,4BAAKjG,GACL,4BAAQmG,QAASH,GAAjB,MACA,4BAAQG,QAASF,GAAjB,W,GAPcG,e,yCCNhBnG,GAAU,I,0LCFXoG,M,yEAAoB,K,wCAEpBxF,M,oFAAkB,WACf,EAAKb,a,wCAGRa,M,oFAAkB,WACf,EAAKb,a,GDQEqC,GAXD,WACV,OACI,kBAAC,KAAD,CAAUpC,QAASA,IAEf,6BACI,kBAAC,GAAD,SEiBDoC,GAtBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,oCACA,kBAACiE,GAAD,OAEJ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIjB,KAAM,CAAC,UAAU,aAAa,cAC9Bb,SAAU,CACN,kBAACoB,GAAD,CAASpB,SClBrB,krBDmBY,kBAACoB,GAAD,CAASpB,SCKlB,uuBDJS,kBAACoB,GAAD,CAASpB,SCkClB,6QD9BH,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SCgDd,4mDCSC+B,G,YAvEX,WAAY/E,GAAQ,IAAD,8BACf,4CAAMA,KARVtB,MAAQ,CACJF,OAAS,EACT4C,MAAQ,MAKO,EAFnB4D,MAAQ,KAEW,EA4BnBC,YAAc,WACV,EAAKC,SAAS,CACV1G,OAAS,EAAKE,MAAMF,OAAS,KA5BjC2G,QAAQC,IAAI,eAFG,E,iFAcfD,QAAQC,IAAI,uB,4CAGMC,EAAWC,GAI7B,OAHAH,QAAQC,IAAI,2BAA4BC,EAAWC,GAG5CA,EAAU9G,OAAS,KAAO,I,6CAIjC2G,QAAQC,IAAI,0B,8CASQG,EAAWC,GAE/B,OADAL,QAAQC,IAAI,2BACTG,EAAUnE,QAAUM,KAAK1B,MAAMoB,MACvBM,KAAKsD,MAAM9E,MAAMkB,MAErB,O,yCAGQmE,EAAWC,EAAWC,GACrCN,QAAQC,IAAI,qBAAsBG,EAAWC,GAC1CC,GACCN,QAAQC,IAAI,oEAAoBK,K,+BAI9B,IAAD,OACLN,QAAQC,IAAI,UAEZ,IAAMlF,EAAQ,CACVkB,MAAQM,KAAK1B,MAAMoB,OAGvB,OACI,6BAEI,wBAAIlB,MAAOA,EAAOwF,IAAK,SAAAA,GAAG,OAAI,EAAKV,MAAMU,IACpChE,KAAKhD,MAAMF,QAEhB,sCAAYkD,KAAKhD,MAAM0C,OACvB,4BAAQuD,QAASjD,KAAKuD,aAAtB,0B,gDA1DoBI,EAAWG,GAEvC,OADAL,QAAQC,IAAI,4BACTC,EAAUjE,QAAUoE,EAAUpE,MACtB,CAAEA,MAAQiE,EAAUjE,OAExB,S,GAlBewD,aCkBfe,G,2MAjBXjH,MAAQ,CACJkH,OAAQ,G,iFAGMA,EAAOC,GACrBnE,KAAKwD,SAAS,CACVU,OAAQ,IAEZT,QAAQC,IAAI,sBAAuB,CAACQ,QAAOC,W,+BAI3C,OAAGnE,KAAKhD,MAAMkH,MAAc,yFACrBlE,KAAK1B,MAAMM,a,GAdEsE,a,IC8BbkB,G,2MAvBXpH,MAAQ,CACJ0C,MAAQ,W,EAGZ6D,YAAc,WACV,EAAKC,SAAS,CACV9D,MAVD,IAAM2E,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,O,wEAevD,OACI,6BACI,4BAAQvB,QAASjD,KAAKuD,aAAtB,6BACA,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAiB7D,MAAOM,KAAKhD,MAAM0C,c,GAjBxBwD,aCqBZ/D,GAtBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,6CACA,kBAAC,GAAD,OAEJ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIgD,KAAM,CAAC,eAAe,qBAAqB,oBAC3Cb,SAAU,CACN,kBAACoB,GAAD,CAASpB,SClBhB,8yBDmBO,kBAACoB,GAAD,CAASpB,SCkBV,svEDjBC,kBAACoB,GAAD,CAASpB,SCwGZ,mhBDpGT,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SC8Hd,4mD,UC3ICmD,GARQ,WACnB,OACI,kBAACC,GAAA,EAAD,CAAQC,QAAQ,YAAYjF,MAAM,WAAlC,gB,oECkBFkF,GAAY,CACd,CACA,GAAM,EACN,MAAS,+BACT,KAAQ,qBACR,SAAY,SACZ,OAAU,eACV,IAAO,sBAEP,CACA,GAAM,EACN,MAAS,+BACT,KAAQ,qBACR,SAAY,SACZ,OAAU,eACV,IAAO,kCAEP,CACA,GAAM,EACN,MAAS,+BACT,KAAQ,qBACR,SAAY,SACZ,OAAU,eACV,IAAO,6BAILC,GAAM,SAACvG,GACT,OACI,kBAACwG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAYzG,EAAMhB,IAClB,kBAACyH,GAAA,EAAD,KAAW,yBAAKC,IAAK1G,EAAM2G,MAAOC,IAAI,aACtC,kBAACH,GAAA,EAAD,KAAYzG,EAAM6G,MAClB,kBAACJ,GAAA,EAAD,KAAYzG,EAAM8G,UAClB,kBAACL,GAAA,EAAD,KAAYzG,EAAM+G,QAClB,kBAACN,GAAA,EAAD,KAAYzG,EAAMgH,OAKxBC,G,iLACQ,IACEC,EAAYxF,KAAK1B,MAAjBkH,QACR,OACI,kBAACC,GAAA,EAAD,CAAO1G,UAAWyG,EAAQE,MACtB,kBAACC,GAAA,EAAD,CAAO5G,UAAWyG,EAAQI,OACtB,kBAACC,GAAA,EAAD,KACI,kBAACf,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,uBAGJ,kBAACe,GAAA,EAAD,KACKlB,GAAU9G,KAAI,SAAAiI,GACf,OAAO,kBAAC,GAAD,CAAKtD,IAAKsD,EAAEzI,GAAIA,GAAIyI,EAAEzI,GAAI2H,MAAOc,EAAEd,MAAOE,KAAMY,EAAEZ,KAAMC,SAAUW,EAAEX,SAAUC,OAAQU,EAAEV,OAAQC,IAAKS,EAAET,gB,GAlB1GpC,aA4Bb8C,iBA/EA,SAAAC,GAAK,MAAK,CACzBP,KAAM,CACNrG,MAAO,OACP6G,UAAgC,EAArBD,EAAME,QAAQC,KACzBC,UAAW,QAEXT,MAAO,CACPU,SAAU,SAwEKN,CAAmBT,IC3EnBgB,GAZI,WACf,OACI,6BACI,qCACA,kBAAC,GAAD,MAEA,oCACA,kBAAC,GAAD,QCkBGpH,GAtBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,2CACA,kBAAC,GAAD,OAEJ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIgD,KAAM,CAAC,gBAAgB,oBAAoB,oBAC3Cb,SAAU,CACN,kBAACoB,GAAD,CAASpB,SClBf,yXDmBM,kBAACoB,GAAD,CAASpB,SCGX,gSDFE,kBAACoB,GAAD,CAASpB,SCmBZ,q0FDfT,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SCgHd,wgB,iBC7HCkF,GATF,WACT,OACI,6BACI,sCACA,iE,qBCcGC,GAjBD,SAACnI,GAAW,IACdoI,EAAapI,EAAboI,SAIFC,EAA8B,SAHtBC,KAAGC,MAAMH,EAASI,OAAQ,CACpCC,mBAAoB,IAECC,OACzB,OACI,6BACI,4CACA,yHAEA,qGACCL,GAAc,uBAAGnI,MAAO,CAACkB,MAAM,QAAjB,kDCaZuH,iBAxBU,SAAC3I,GAAW,IACzBoI,EAA6BpI,EAA7BoI,SAAUQ,EAAmB5I,EAAnB4I,MAAOC,EAAY7I,EAAZ6I,QAEzB,OACI,6BACI,wCACA,8BACIjH,MAAOkH,KAAKC,UAAUX,EAAU,KAAM,GACtCY,KAAM,EACNC,UAAU,IAGd,qCACA,8BACIrH,MAAOkH,KAAKC,UAAUH,EAAO,KAAM,GACnCI,KAAM,EACNC,UAAU,IAEd,4BAAQtE,QAAS,kBAAMkE,EAAQK,KAAK,OAApC,0BCnBNC,GAAO,CACTC,UAAY,CACRC,SAAW,WACXC,YAAc,4DAElBC,SAAW,CACPF,SAAW,OACXC,YAAc,uDAqBPE,GAjBC,SAACxJ,GAAU,IAEfyJ,EAAazJ,EAAM4I,MAAMc,OAAzBD,SACFE,EAAUR,GAAKM,GAErB,OAAKE,EAID,6BACI,4BAAKF,EAAL,IAAgBE,EAAQN,SAAxB,KACA,2BAAIM,EAAQL,aACZ,kBAAC,GAAD,OANG,2FCUAM,GA1BE,WACb,IAAMC,EAAc,CAChB5H,WAAa,QACbb,MAAQ,SAGZ,OACI,6BACI,kEACA,4BACI,4BAAI,kBAAC,KAAD,CAASyI,YAAaA,EAAaC,GAAG,sBAAsBC,QAAM,GAAlE,cACJ,4BAAI,kBAAC,KAAD,CAASF,YAAaA,EAAaC,GAAG,sBAAtC,cAGR,kBAAC,KAAD,CACIE,KAAK,YACLC,OAAK,EAELC,OAAQ,kBAAM,kGAGlB,kBAAC,KAAD,CAAOF,KAAK,sBAAsBG,UAAWX,OCO1CY,GAzBQ,WACnB,OACI,6BACI,4BACI,4BAAI,kBAAC,KAAD,CAAMN,GAAG,KAAT,WACJ,4BAAI,kBAAC,KAAD,CAAMA,GAAG,UAAT,iBAGJ,4BAAI,kBAAC,KAAD,CAAMA,GAAG,aAAT,wBAIR,6BACA,kBAAC,KAAD,CAAOE,KAAK,IAAIG,UAAWjC,GAAM+B,OAAO,IAI5C,kBAAC,KAAD,CAAOD,KAAM,CAAC,SAAU,SAAUG,UAAWhC,KAG7C,kBAAC,KAAD,CAAO6B,KAAK,YAAYG,UAAWP,OCK5B/I,GAzBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,gDACA,kBAAC,GAAD,OAEJ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIgD,KAAM,CAAC,eAAgB,oBAAqB,UAAU,WAAY,aAAc,eAChFb,SAAU,CACN,kBAACoB,GAAD,CAASpB,SClBpB,8kBDmBW,kBAACoB,GAAD,CAASpB,SCIX,+0CDHE,kBAACoB,GAAD,CAASpB,SC0DrB,2ODzDY,kBAACoB,GAAD,CAASpB,SCwCpB,6SDvCW,kBAACoB,GAAD,CAASpB,SCyElB,mzBDxES,kBAACoB,GAAD,CAASpB,SC2GjB,q5BDvGJ,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SCsId,mrEC7HCqH,G,2MA/BXC,aAAe,WACX,EAAKtK,MAAM6I,QAAQ0B,U,EAIvBC,aAAe,WACX,EAAKxK,MAAM6I,QAAQK,KAAK,M,mFAKxBxH,KAAK+I,OAAS/I,KAAK1B,MAAM6I,QAAQ6B,MAAM,8D,2CAKnChJ,KAAKiJ,SACLjJ,KAAK+I,W,+BAKT,OACI,6BACI,4BAAQ9F,QAASjD,KAAK4I,cAAtB,4BACA,4BAAQ3F,QAASjD,KAAK8I,cAAtB,2B,GA5BY5F,aCkCbgG,GA7BS,WACpB,OACI,6BACI,4BACI,4BAAI,kBAAC,KAAD,CAAMd,GAAG,KAAT,WACJ,4BAAI,kBAAC,KAAD,CAAMA,GAAG,UAAT,iBACJ,4BAAI,kBAAC,KAAD,CAAMA,GAAG,aAAT,uBACJ,4BAAI,kBAAC,KAAD,CAAMA,GAAG,YAAT,0BAER,6BACA,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOE,KAAK,IAAIG,UAAWjC,GAAM+B,OAAO,IACxC,kBAAC,KAAD,CAAOD,KAAM,CAAC,SAAU,SAAUG,UAAWhC,KAC7C,kBAAC,KAAD,CAAO6B,KAAK,YAAYG,UAAWP,KACnC,kBAAC,KAAD,CAAOI,KAAK,WAAWG,UAAWE,KAClC,kBAAC,KAAD,CAEAH,OAAQ,gBAAE9B,EAAF,EAAEA,SAAF,OACJ,6BACI,2GACA,2BAAIA,EAASyC,iBCKtBhK,GAzBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,gFACA,kBAAC,GAAD,OAEJ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIgD,KAAM,CAAC,eAAgB,qBAAsB,aAAa,cAAe,mBAAoB,uBAC7Fb,SAAU,CACN,kBAACoB,GAAD,CAASpB,SClBpB,8kBDmBW,kBAACoB,GAAD,CAASpB,SCIV,ggDDHC,kBAACoB,GAAD,CAASpB,SCgFlB,05BD/ES,kBAACoB,GAAD,CAASpB,SC4CjB,sjCD3CQ,kBAACoB,GAAD,CAASpB,SCmHZ,okCDlHG,kBAACoB,GAAD,CAASpB,SC2JT,k0BDvJZ,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SCyLd,yxCCpMCqB,GAdC,SAACrE,GAAW,IAChBxB,EAAmCwB,EAAnCxB,OAAQsM,EAA2B9K,EAA3B8K,WAAYC,EAAe/K,EAAf+K,WAE5B,OACI,6BACI,4BAAKvM,GACL,6BACI,4BAAQmG,QAASmG,GAAjB,MACA,4BAAQnG,QAASoG,GAAjB,SCgCDC,gBACX,SAAAtM,GAAK,MAAK,CACNF,OAASE,EAAMD,QAAQD,UAE3B,CAEIgG,S3C1CgB,iBAAO,CAAE7F,KAAON,I2C2ChCoG,S3C1CgB,iBAAO,CAAE9F,KAAOL,K2CmCzB0M,EApCU,SAAChL,GAAW,IACzBxB,EAA+BwB,EAA/BxB,OAAQgG,EAAuBxE,EAAvBwE,SAAUC,EAAazE,EAAbyE,SAE1B,OAAO,kBAAC,GAAD,CAASjG,OAAQA,EAAQsM,WAAYtG,EAAUuG,WAAYtG,OCPhEwG,GAAW,SAACjL,GAAW,IACjBT,EAA6BS,EAA7BT,KAAM2L,EAAuBlL,EAAvBkL,SAAUC,EAAanL,EAAbmL,SAExB,OACI,6BACI,2BAAOxM,KAAK,WACRgG,QAAS,kBAAMuG,EAAS3L,EAAKP,KAC7BoM,QAAS7L,EAAKH,KACd6J,UAAU,IAEd,0BAAM/I,MAAO,CAAEmL,eAAiB9L,EAAKH,KAAO,eAAiB,SACxDG,EAAKJ,MAEV,4BAAQwF,QAAS,kBAAMwG,EAAS5L,EAAKP,MAArC,kBA2CGsM,GAtCD,SAACtL,GAAW,IAElBf,EAMAe,EANAf,MACAC,EAKAc,EALAd,MACAqM,EAIAvL,EAJAuL,cACAC,EAGAxL,EAHAwL,SACAN,EAEAlL,EAFAkL,SACAC,EACAnL,EADAmL,SAWJ,OACI,6BACI,0BAAMM,SAVG,SAAAC,GACbA,EAAEC,iBACFH,EAASvM,GACTsM,EAAc,MAQN,2BAAO3J,MAAO3C,EAAO2M,SALhB,SAAAF,GAAC,OAAIH,EAAcG,EAAEG,OAAOjK,UAMjC,4BAAQjD,KAAK,UAAb,iBAEJ,6BACKO,EAAMM,KAAI,SAAAD,GAAI,OACX,kBAAC,GAAD,CACIA,KAAMA,EACN4E,IAAK5E,EAAKP,GACVkM,SAAUA,EACVC,SAAUA,UCvBnBH,gBAGX,gBAAG9L,EAAH,EAAGA,MAAH,MAAgB,CACZD,MAAQC,EAAMD,MACdC,MAAQA,EAAMA,SAElB,CACI4M,Y5C3BmB,SAAA7M,GAAK,MAAK,CACjCN,KAAOC,EACPK,U4C0BI8M,O5CtBc,SAAA5M,GAAI,MAAK,CAC3BR,KAAOE,EACPU,KAAO,CACHP,GAAKA,IACLG,OACAC,MAAO,K4CkBP4M,O5Cdc,SAAAhN,GAAE,MAAK,CACzBL,KAAOG,EACPE,O4CaIiN,O5CVc,SAAAjN,GAAE,MAAK,CACzBL,KAAOI,EACPC,Q4CHWgM,EAtBQ,SAAChL,GAAW,IAE3Bf,EAMAe,EANAf,MACAC,EAKAc,EALAd,MACA4M,EAIA9L,EAJA8L,YACAC,EAGA/L,EAHA+L,OACAC,EAEAhM,EAFAgM,OACAC,EACAjM,EADAiM,OAGJ,OACI,kBAAC,GAAD,CACIhN,MAAOA,EACPC,MAAOA,EACPqM,cAAeO,EACfN,SAAUO,EACVb,SAAUc,EACVb,SAAUc,OCRPC,GAVD,WACV,OACI,6BACI,kBAAC,GAAD,MACA,6BACA,kBAAC,GAAD,QCkBGrL,GApBD,WACV,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,qCACA,kBAAC,GAAD,OAEJ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIgD,KAAM,CAAC,gBACPb,SAAU,MAKlB,kBAAC,EAAD,KAAO,kBAACoB,GAAD,CAASpB,SCGd,syG,uECJRmJ,I,mBACF,WAAYnM,GAAQ,IAAD,8BACf,4CAAMA,KAKVoM,mBAAqB,kBAAM,EAAKlH,SAAS,CAAC8G,QAAS,EAAKtN,MAAMsN,UAJ1D,EAAKtN,MAAQ,CACTsN,QAAQ,GAHG,E,sEAOT,IACE9E,EAAYxF,KAAK1B,MAAjBkH,QACR,OACI,6BACI,yBAAKzG,UAAWyG,EAAQE,MACpB,kBAACiF,GAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,GAAA,EAAD,CAAY9L,UAAWyG,EAAQsF,WAAYpL,MAAM,UAAUuD,QAASjD,KAAK0K,oBACrE,kBAAC,KAAD,QAGR,kBAACK,GAAA,EAAD,CAAQC,KAAMhL,KAAKhD,MAAMsN,OAAQvL,UAAU,aACvC,kBAACkM,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,QAAhC,eAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,QAAhC,aAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,QAAhC,mBAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,eAAhC,SAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,QAAhC,mBAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,qBAAhC,gBAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,yBAAhC,qBAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,0BAAhC,sBAIJ,kBAAC6C,GAAA,EAAD,CAAUhI,QAASjD,KAAK0K,oBACpB,kBAACQ,GAAA,EAAD,CAAMzC,UAAW0C,KAAY/C,GAAG,gBAAhC,YAMZ,yBAAK9K,GAAG,UAAUkB,MAAO,CAACoC,OAAQ,OAAQsF,UAAW,SAChDkF,IAAMC,aAAarL,KAAK1B,MAAMM,gB,GAnE5BwM,IAAMlI,YA0Ed8C,gBAnFA,CACXN,KAAM,CACF4F,SAAU,GAEdR,WAAY,CACVS,YAAa,SA8EJvF,CAAmByE,ICnCnBe,OAvCf,WACE,OACE,oCAWE,kBAAC,KAAD,KACM,kBAAC,GAAD,KACI,6BACI,kBAAC,KAAD,CAAOjD,OAAK,EAACD,KAAK,OAAOG,UAAWgD,IACpC,kBAAC,KAAD,CAAOlD,OAAK,EAACD,KAAK,OAAOG,UAAWjJ,KACpC,kBAAC,KAAD,CAAO+I,OAAK,EAACD,KAAK,OAAOG,UAAWiD,KACpC,kBAAC,KAAD,CAAOnD,OAAK,EAACD,KAAK,cAAcG,UAAWrF,KAC3C,kBAAC,KAAD,CAAOmF,OAAK,EAACD,KAAK,OAAOG,UAAWrE,KACpC,kBAAC,KAAD,CAAOmE,OAAK,EAACD,KAAK,oBAAoBG,UAAWlC,KACjD,kBAAC,KAAD,CAAOgC,OAAK,EAACD,KAAK,wBAAwBG,UAAWC,KACrD,kBAAC,KAAD,CAAOH,OAAK,EAACD,KAAK,yBAAyBG,UAAWS,KACtD,kBAAC,KAAD,CAAOX,OAAK,EAACD,KAAK,eAAeG,UAAW+B,KAG5C,kBAAC,KAAD,CAAOjC,OAAK,EAACD,KAAK,IAAIG,UAAWjC,KACjC,kBAAC,KAAD,CAAO+B,OAAK,EAACD,KAAK,SAASG,UAAWhC,KACtC,kBAAC,KAAD,CAAO8B,OAAK,EAACD,KAAK,YAAYG,UAAWP,KACzC,kBAAC,KAAD,CAAOI,KAAK,sBAAsBG,UAAWX,KAC7C,kBAAC,KAAD,CAAOQ,KAAK,WAAWG,UAAWE,UCxClCgD,QACW,cAA7BC,OAAOlF,SAASmF,UAEe,UAA7BD,OAAOlF,SAASmF,UAEhBD,OAAOlF,SAASmF,SAAS3E,MACvB,2DCJN,IAAM4E,GAAQC,sBAAY/N,EAAagO,iCAEvCC,IAASzD,OACL,kBAAC,IAAD,CAAUsD,MAAOA,IACjB,kBAAC,KAAD,KACI,kBAAC,GAAD,QAGRI,SAASC,eAAe,SD6GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5f2575f2.chunk.js","sourcesContent":["// 액션 타입 정의\n// 모듈 이름 / 액션 이름 같은 형태\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\n\n// 액션 생성 함수 만들기\nexport const increase = () => ({ type : INCREASE });\nexport const decrease = () => ({ type : DECREASE });\n\n// 초기 상태 정의 및 리듀서 함수 만들기\nconst initialState = {\n    number : 0\n};\n\nfunction counter(state = initialState, action) {\n    switch (action.type) {\n        case INCREASE : \n            return {\n                number : state.number + 1\n            };\n        case DECREASE : \n            return {\n                number : state.number - 1\n            };\n        default :\n            return state;\n    }\n}\n\nexport default counter;","// 단계1\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT'; // 인풋 값을 변경\nconst INSERT = 'todos/INSERT'; // 새로운 todo등록\nconst TOGGLE = 'todos/TOGGLE'; // todo 체크/체크해제\nconst REMOVE = 'todos/REMOVE'; // todo 제거\n\n// 단계2\n// 파라미터가 필요한 액션 생성 함수\nexport const changeInput = input => ({\n    type : CHANGE_INPUT,\n    input\n});\n\nlet id = 3; // insert 호출 시 1씩 더해짐. ( 초기 id 1,2 존재 가정 )\nexport const insert = text => ({\n    type : INSERT,\n    todo : {\n        id : id++,\n        text,\n        done : false\n    }\n});\n\nexport const toggle = id => ({\n    type : TOGGLE,\n    id\n});\n\nexport const remove = id => ({\n    type : REMOVE,\n    id\n});\n\n// 단계3\nconst initialState = {\n    input : '',\n    todos : [\n        {\n            id : 1,\n            text : '리덕스 기초',\n            done : true\n        },\n        {\n            id : 2,\n            text : '리액트와 리덕스',\n            done : false\n        }\n    ]\n}\n\nfunction todos(state = initialState, action){\n    switch(action.type) {\n        case CHANGE_INPUT :\n            return {\n                ...state,\n                input : action.input\n            };\n        case INSERT :\n            return {\n                ...state,\n                todos : state.todos.concat(action.todo)\n            };\n        case TOGGLE :\n            return {\n                ...state,\n                todos : state.todos.map(todo => \n                    todo.id === action.id ? { ...todo, done : !todo.done } : todo\n                )\n            };\n        case REMOVE :\n            return {\n                ...state,\n                todos : state.todos.filter(todo => todo.id !== action.id)\n            };\n        default : \n            return state;\n    }\n}\n\nexport default todos;","// root Reducer : createStore에서 스토어를 만들 때 리듀서를 하나만 사용해야하므로, 리듀서를 하나로 합침.\n// combineReducers라는 유틸 함수 사용\nimport { combineReducers } from 'redux';\nimport counter from './counter';\nimport todos from './todos';\n\nconst rootReducer = combineReducers({\n    counter,\n    todos\n});\n\nexport default rootReducer;","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderContents = styled.span`\n    border : 1px solid skyblue;\n    background : skyblue;\n    color : white;\n    border-radius : 10px;\n    font-size : 25px;\n    font-weight : bold;\n    margin-top : 15px;\n    padding : 2px 20px;\n`\n\nconst PageHeader = (props) => {\n    const { Text } = props;\n\n    return (\n        <div style={{display : 'flex', justifyContent : 'center', }}>\n            <HeaderContents>{Text}</HeaderContents>\n        </div>\n    );\n};\n\nexport default PageHeader;","import React from 'react';\nimport styled from 'styled-components';\nimport PageHeader from './PageHeader';\n\nimport './PageBox.css';\n\nconst MainBox = ({children}) => {\n    const Box = styled.div`\n    display : inline-flex;\n    width : 100%;\n    border : 1px dashed red;\n    margin : 5px;\n    background : #EEEEEE;\n`\n    return (\n        <Box className=\"main-box\">\n            {children}\n        </Box>\n    )\n}\n\n\nconst ContentsBox = ({children}) => {\n    const Box = styled.div`\n        width : 33%;\n        padding : 5px;\n        display : flex;\n        flex-direction: column;\n    `\n    return (\n        <Box className=\"page-box\">\n            <PageHeader Text='Pages'/>\n            {children}\n        </Box>\n    )\n}\n\nconst CodeBox = ({children}) => {\n    const Box = styled.div`\n        width : 33%;\n        padding : 5px;\n        border-left : 1px dashed red;\n        border-right : 1px dashed red;\n        display : flex;\n        flex-direction: column;\n    `\n    return (\n        <Box className=\"page-box\">\n            <PageHeader Text='Code'/>\n            {children}\n        </Box>\n    )\n}\n\nconst MdBox = ({children}) => {\n    const Box = styled.div`\n        width : 33%;\n        padding : 5px;\n        display : flex;\n        flex-direction: column;\n    `\n    return (\n        <Box className=\"page-box\">\n            <PageHeader Text='MarkDown'/>\n            {children}\n        </Box>\n    )\n}\n\nexport { MainBox, ContentsBox, CodeBox, MdBox };","import React from 'react';\nimport './Lv1React.css';\nimport { MainBox } from 'components/styled';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <div style={{padding:'5px'}}>\n                <h2>Lv1. React</h2>\n\n                <h3>React란?</h3>\n                <p style={{width : '400px'}}>\n                    리액트는 페이스북에서 제공해주는 프론트엔드 라이브러리이다. \n                    리액트는 컴포넌트 기반으로 되어있어, 컴포넌트에 데이터를 주면 개발자가 설계한대로 UI가 설계되어 사용자에게 보여진다.\n                </p>\n\n                <h3>작업 환경</h3>\n                <table className='Lv1-table'>\n                    <tbody>\n                        <tr>\n                            <th>설치</th>\n                            <th>버전</th>\n                            <th>기타</th>\n                        </tr>\n                        <tr>\n                            <td>node.js</td>\n                            <td>12.13.0</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>npm</td>\n                            <td>5.6.0</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Visual Studio Code</td>\n                            <td>latest</td>\n                            <td>확장 프로그램 설치</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <span style={{paddingTop : '10px'}}>VS code 확장프로그램</span>\n                <ol>\n                    <li>ESLint : 자바스크립트 문법 및 코드 스타일을 검사해주는 도구.</li>\n                    <li>Reactjs Code Snippets : 리액트 컴포넌트 및 라이프사이클 함수를 작성할 때 단축 단어 사용.</li>\n                    <li>Prettier-Code formatter : 코드 스타일을 자동으로 정리해주는 도구.</li>\n                </ol>\n            </div>\n        </MainBox>\n    );\n};\n\nexport default index;","import React from 'react';\n\nfunction Hello() {\n    return <div>안녕하세요!</div>;\n}\n\nexport default Hello;","import React from 'react';\nimport Hello from './Hello';\n// import '../../App.css';\n\nconst Lv2JSX = () => {\n    const name = 'react';\n    const style = {\n        backgroundColor : 'black',\n        color : 'aqua',\n        fontSize : 24,\n        padding : '1rem'\n    }\n\n    return (\n        <div>\n            <h2>Lv2. JSX</h2>\n            <Hello \n                // 이런 식의 작성하는 주석문\n            />\n            <div style={style}>{name}</div>\n            <div className=\"gray-box\">gray-box</div>\n            {/* 어쩌고 저쩌고 */}\n        </div>\n    );\n}\n\nexport default Lv2JSX;","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport { duotoneDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={duotoneDark}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;\n\n// npmjs.com/package/react-syntax-highlighter","import React from 'react';\nimport CodeBlock from './CodeBlock';\n\nfunction InlineCodeBlock(props) {\n    return (\n        <span style={{ background : '#ff0'}}>\n            {props.value}\n        </span>\n    )\n}\n\nfunction BlockQuoteBlock(props) {\n    return (\n        <div style={{border : '1px dashed #aaa', borderRadius : 10, paddingLeft : 10, margin : 5}}>\n            {props.children}\n        </div>\n    );\n}\n\n// function CodeBlock(props) {\n//     return (\n//         <pre style={{background:'#000', color : '#fff', padding : 10}}>\n//             <code>\n//                 {props.value}\n//             </code>\n//         </pre>\n//     )\n// }\n\nfunction TableCellBlock(props) {\n    let style = {\n        textAlign : props.align ? props.align : 'center',\n        padding : 5\n    }\n\n    if (props.isHeader) {\n        style.background = '#ff0';\n        style.border = '1px solid #ccc';\n        style.borderLeft = 0;\n        style.borderRight = 0;\n    } else {\n        style.borderBottom = '1px solid #eee';\n    }\n\n    return (\n        <td style={style}>\n            {props.children}\n        </td>\n    )\n}\n\nexport { InlineCodeBlock, BlockQuoteBlock, CodeBlock, TableCellBlock } ;","import React from 'react';\nimport { InlineCodeBlock, CodeBlock, TableCellBlock, BlockQuoteBlock } from './Renderer';\n\nconst ReactMarkdown = require('react-markdown');\n\nconst index = (props) => {\n    const { contents } = props;\n    \n    return (\n        <div style={{width: 'auto', height : '600px', overflow:'scroll'}}>\n            <ReactMarkdown\n                source={contents && contents}\n                skipHtml={false}\n                escapeHtml={false}\n                renderers={{\n                    code : CodeBlock,\n                    tableCell : TableCellBlock,\n                    inlineCode : InlineCodeBlock,\n                    blockquote : BlockQuoteBlock\n                }}\n                />\n        </div>\n    );\n};\n\nexport default index;\n\n\n// https://medium.com/young-developer/react-markdown-code-and-syntax-highlighting-632d2f9b4ada","/*\n*   props.menu is Tab Name. (String)\n*   props.contents is Tab Contents (Component)\n*   \n*   made by Copotter\n*/\n\nimport React from 'react';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\nimport './Tab.css';\nimport \"react-tabs/style/react-tabs.css\";\n\nconst style={\n    paddingBottom:\"10px\",\n}\n\nconst AutoTab = (props) => {\n\tconst {menu, contents,customStyle,customTab} = props\n\n\treturn(\n        <Tabs \n         style={customStyle!=null?customStyle:style}\n         defaultIndex={props.startTabIndex ? props.startTabIndex : 0}>\n            <TabList>\n    \t\t{menu.map((list, index) => (\n\t    \t\t    <Tab style={customTab!=null?customTab:{}} key={index}>{list}</Tab>\t\n\t    \t))}\n            </TabList>\n            {contents.map((list, index) => (\n                <TabPanel key={index}>{list}</TabPanel>\n            ))}\n        </Tabs>\n\t)\n}\n\nexport const AutoTab_Testmenu = [\"first_tab\",\"second_tab\"];\nexport const AutoTab_Testcontents = [\"first_page\", \"second_page\"];\n\n\nexport default AutoTab;","import React from 'react';\nimport Lv2JSX from './Lv2JSX';\nimport TransMd from 'components/TransMd';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport { Lv2JSXJS, HelloJS, markdown} from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox><Lv2JSX /></ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['Lv2JSX.js','Hello.js']}\n                    contents={[\n                        <TransMd contents={Lv2JSXJS} />,\n                        <TransMd contents={HelloJS} />\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n}\n\nexport default index;","const Lv2JSXJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport Hello from './Hello';\nimport '../../App.css';\n\nconst Lv2JSX = () => {\n    const name = 'react';\n    const style = {\n        backgroundColor : 'black',\n        color : 'aqua',\n        fontSize : 24,\n        padding : '1rem'\n    }\n\n    return (\n        <div>\n            <h2>Lv2. JSX</h2>\n            <Hello \n                // 이런 식의 작성하는 주석문\n            />\n            <div style={style}>{name}</div>\n            <div className=\"gray-box\">gray-box</div>\n            {/* 어쩌고 저쩌고 */}\n        </div>\n    );\n}\n\nexport default Lv2JSX;\n\\`\\`\\`\n`\n\nconst HelloJS = `\n\\`\\`\\`jsx\nimport React from 'react';\n\nfunction Hello() {\n    return <div>안녕하세요!</div>;\n}\n\nexport default Hello;\n\\`\\`\\`\n`\n\nconst markdown = `\n\n# JSX\n\n## 규칙\n<ol>\n\n1. 태그는 꼭 닫혀있어야 한다.\n    ( Self Closing Tag 가능 )\n    \\`\\`\\`html\n    <div>태그 닫기</div>\n    <Hello />\n    \\`\\`\\`\n\n2. 두 개 이상의 태그는 하나의 태그로 감싸져야 한다.\n    ( FlagMent (<></>)를 사용하면 편리함 )\n    \\`\\`\\`javascript\n    <>\n        <div>두개 이상의</div>\n        <p>태그는 하나로 감싸야한다.</p>\n    </>\n    \\`\\`\\`\n\n3. JSX에서 변수를 표현할 때, {변수명} 으로 표현한다.\n    \\`\\`\\`javascript\n    const name = '이렇게';\n    return <div>JavaScript 값 : {name} </div>\n    \\`\\`\\`\n\n4. style을 줄 때, 객체로 카멜표기법 사용.\n\n5. JSX에서 class는 className=\"클래스명\" 으로 표현한다.\n\n    \\`\\`\\`javascript\n    const style = {\n        background : 'gray',\n    }\n    return (\n        <div style={style}>\n            <div className=\"my-style\">\n                style과 className\n            </div>\n        </div>\n    )\n    \\`\\`\\`\n\n6. 주석은 {/* ~~~ */} 으로 표현한다.\n    \\`\\`\\`javascript\n    return (\n        <div>\n            {/* 주석주석 */}\n            <input\n                // 이렇게도 주석\n            />\n        </div>\n    )\n    \\`\\`\\`\n\n</ol>\n\n`\n\nexport { Lv2JSXJS, HelloJS, markdown };","import React from 'react';\nimport TransMd from 'components/TransMd';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\n\nconst contents = `\n\n*준비중...*\n`;\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>Lv3. Component</h2>\n\n                <h3>class Component</h3>\n\n                <h3>functional Component</h3>\n\n            </ContentsBox>\n            <CodeBox><TransMd contents={contents}/></CodeBox>\n            <MdBox><TransMd contents={contents}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\n\n// **** 함수형태로 파라미터를 전달해주면 특정 값만 받아올 수 있음.\n@inject(stores => ({\n  number: stores.counter.number,\n  increase: stores.counter.increase,\n  decrease: stores.counter.decrease,\n}))\n\n@observer\nclass Counter extends Component {\n  render() {\n    const { number, increase, decrease } = this.props;\n    return (\n      <div>\n        <h1>{number}</h1>\n        <button onClick={increase}>+1</button>\n        <button onClick={decrease}>-1</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\nimport { Provider } from 'mobx-react'; // MobX 에서 사용하는 Provider\nimport CounterStore from './stores/counter'; // 방금 만든 스토어 불러와줍니다.\n\nconst counter = new CounterStore(); // 스토어 인스턴스 생성\n\nconst index = () => {\n    return (\n        <Provider counter={counter}>\n        {/* Provider 에 props 로 넣어줍니다. */}\n            <div>\n                <Counter /> \n            </div>\n        </Provider>\n    );\n};\n\nexport default index;","import { observable, action } from 'mobx';\n\nexport default class CounterStore {\n    @observable number = 0;\n\n    @action increase = () => {\n        this.number++;\n    }\n\n    @action decrease = () => {\n        this.number--;\n    }\n}","import React from 'react';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport MobX from './MobX';\nimport TransMd from 'components/TransMd';\nimport { markdown, MobxJS, CounterJS, counterJS } from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>MobX</h2>\n                <MobX />\n            </ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['MobX.js','Counter.js','counter.js']}\n                    contents={[\n                        <TransMd contents={MobxJS} />,\n                        <TransMd contents={CounterJS} />,\n                        <TransMd contents={counterJS} />,\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","const MobxJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport Counter from './Counter';\nimport { Provider } from 'mobx-react'; // MobX 에서 사용하는 Provider\nimport CounterStore from './stores/counter'; // 방금 만든 스토어 불러와줍니다.\n\nconst counter = new CounterStore(); // 스토어 인스턴스 생성\n\nconst index = () => {\n    return (\n        <Provider counter={counter}>\n        {/* Provider 에 props 로 넣어줍니다. */}\n            <div>\n                <Counter /> \n            </div>\n        </Provider>\n    );\n};\n\nexport default index;\n\\`\\`\\`\n`\n\nconst CounterJS = `\n\\`\\`\\`jsx\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\n\n// **** 함수형태로 파라미터를 전달해주면 특정 값만 받아올 수 있음.\n@inject(stores => ({\n  number: stores.counter.number,\n  increase: stores.counter.increase,\n  decrease: stores.counter.decrease,\n}))\n\n@observer\nclass Counter extends Component {\n  render() {\n    const { number, increase, decrease } = this.props;\n    return (\n      <div>\n        <h1>{number}</h1>\n        <button onClick={increase}>+1</button>\n        <button onClick={decrease}>-1</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n\\`\\`\\`\n`\n\nconst counterJS = `\n\\`\\`\\`jsx\nimport { observable, action } from 'mobx';\n\nexport default class CounterStore {\n    @observable number = 0;\n\n    @action increase = () => {\n        this.number++;\n    }\n\n    @action decrease = () => {\n        this.number--;\n    }\n}\n\\`\\`\\`\n`\n\nconst markdown = `\n\n# MobX\n- 상태 관리 라이브러리.\n\n## mobx-react\n\n- react에서 MobX를 decorator로 사용하려면, babel를 커스텀해야한다.\n- babel를 커스텀하려면 eject를 해야함.\n\\`\\`\\`node\nnpm run eject // yarn eject\n\\`\\`\\`\n\n- package.json 수정\n- 수정이 완료되면 서버를 재시작한다.\n\\`\\`\\`json\n\"babel\": {\n    \"presets\": [\n      \"react-app\"\n    ],\n    \"plugins\": [\n        [\"@babel/plugin-proposal-decorators\", { \"legacy\": true}],\n        [\"@babel/plugin-proposal-class-properties\", { \"loose\": true}]\n    ]\n  }\n\\`\\`\\`\n\n\n## Mobx Store\n- redux와 같은 개념으로 Store가 존재한다.\n- 하나의 스토어만 존재하는 redux와 달리, 여러 개의 스토어가 존재할 수 있다.\n\n    **참조 파일 : stores/counter.js**\n\n- Provide를 사용하여 컨테이너에 스토어를 적용한다.\n- injectfh 컴포넌트에 스토어에 주입한다.\n\n    **inject는 mobx-react의 함수로, 컴포넌트에서 스토어에 접근할 수 있게 해줌.**\n    **( 스토어의 값을 컴포넌트의 props로 전달 )**\n\n    **참조 파일 : src/Counter.js**\n`\n\nexport { MobxJS, CounterJS, counterJS, markdown } ;","import React, { Component } from 'react';\n\nclass LifeCycleSample extends Component {\n    state = {\n        number : 0,\n        color : null,\n    }\n\n    myRef = null; // ref를 설정할 부분\n    \n    constructor(props) {\n        super(props);\n        console.log('constructor');\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        console.log('getDerivedStateFromProps');\n        if(nextProps.color !== prevState.color) {\n            return { color : nextProps.color };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate : ', nextProps, nextState);\n\n        // 숫자의 마지막 자리가 4면 리렌더링되지 않는다.\n        return nextState.number % 10 !== 4;\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount');\n    }\n\n    handleClick = () => {\n        this.setState({\n            number : this.state.number + 1\n        });\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        console.log('getSnapshotBeforeUpdate');\n        if(prevProps.color !== this.props.color) {\n            return this.myRef.style.color;\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('componentDidUpdate', prevProps, prevState);\n        if(snapshot) {\n            console.log('업데이트되기 직전 색상 : ' , snapshot);\n        }\n    }\n\n    render() {\n        console.log('render');\n\n        const style = {\n            color : this.props.color\n        };\n\n        return (\n            <div>\n                {/* {this.props.missing.value} */}\n                <h1 style={style} ref={ref => this.myRef=ref}>\n                    {this.state.number}\n                </h1>\n                <p>color : {this.state.color}</p>\n                <button onClick={this.handleClick}>\n                    더하기\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default LifeCycleSample;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error : false\n    };\n\n    componentDidCatch(error, info) {\n        this.setState({\n            error : true\n        });\n        console.log('componentDidCatch :', {error, info});\n    }\n\n    render() {\n        if(this.state.error) return <div>에러가 발생했습니다!</div>;\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport LifeCycleSample from './LifeCycleSample';\nimport ErrorBoundary from './ErrorBoundary';\n\nfunction getRandomColor() {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nclass Lv4LifeCycle extends Component {\n    state = {\n        color : '#000000',\n    }\n\n    handleClick = () => {\n        this.setState({\n            color : getRandomColor()\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClick}>랜덤 색상</button>\n                <ErrorBoundary>\n\n                <LifeCycleSample color={this.state.color}/>\n                </ErrorBoundary>\n            </div>\n        );\n    }\n}\n\nexport default Lv4LifeCycle;","import React from 'react';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport TransMd from 'components/TransMd';\nimport { markdown, LifeCycleJS, LifeCycleSampleJS, ErrorBoundaryJS } from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\nimport Lv4LifeCycle from './Lv4LifeCycle';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>Lv4.LifeCycle</h2>\n                <Lv4LifeCycle />\n            </ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['LifeCycle.js','LifeCycleSample.js','ErrorBoundary.js']}\n                    contents={[\n                        <TransMd contents={LifeCycleJS} />,\n                        <TransMd contents={LifeCycleSampleJS} />,\n                        <TransMd contents={ErrorBoundaryJS} />,\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","const LifeCycleJS = `\n\\`\\`\\`jsx\nimport React, { Component } from 'react';\nimport LifeCycleSample from './LifeCycleSample';\nimport ErrorBoundary from './ErrorBoundary';\n\nfunction getRandomColor() {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nclass Lv4LifeCycle extends Component {\n    state = {\n        color : '#000000',\n    }\n\n    handleClick = () => {\n        this.setState({\n            color : getRandomColor()\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClick}>랜덤 색상</button>\n                <ErrorBoundary>\n                    <LifeCycleSample color={this.state.color}/>\n                </ErrorBoundary>\n            </div>\n        );\n    }\n}\n\nexport default Lv4LifeCycle;\n\\`\\`\\`\n`\n\nconst LifeCycleSampleJS = `\n\\`\\`\\`jsx\nimport React, { Component } from 'react';\n\nclass LifeCycleSample extends Component {\n    state = {\n        number : 0,\n        color : null,\n    }\n\n    myRef = null; // ref를 설정할 부분\n    \n    constructor(props) {\n        super(props);\n        console.log('constructor');\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        console.log('getDerivedStateFromProps');\n        if(nextProps.color !== prevState.color) {\n            return { color : nextProps.color };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate : ', nextProps, nextState);\n\n        // 숫자의 마지막 자리가 4면 리렌더링되지 않는다.\n        return nextState.number % 10 !== 4;\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount');\n    }\n\n    handleClick = () => {\n        this.setState({\n            number : this.state.number + 1\n        });\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        console.log('getSnapshotBeforeUpdate');\n        if(prevProps.color !== this.props.color) {\n            return this.myRef.style.color;\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('componentDidUpdate', prevProps, prevState);\n        if(snapshot) {\n            console.log('업데이트되기 직전 색상 : ' , snapshot);\n        }\n    }\n\n    render() {\n        console.log('render');\n\n        const style = {\n            color : this.props.color\n        };\n\n        return (\n            <div>\n                {/* {this.props.missing.value} */}\n                <h1 style={style} ref={ref => this.myRef=ref}>\n                    {this.state.number}\n                </h1>\n                <p>color : {this.state.color}</p>\n                <button onClick={this.handleClick}>\n                    더하기\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default LifeCycleSample;\n\\`\\`\\`\n`\n\nconst ErrorBoundaryJS = `\n\\`\\`\\`jsx\nimport React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error : false\n    };\n\n    componentDidCatch(error, info) {\n        this.setState({\n            error : true\n        });\n        console.log('componentDidCatch :', {error, info});\n    }\n\n    render() {\n        if(this.state.error) return <div>에러가 발생했습니다!</div>;\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n\\`\\`\\`\n`\n\nconst markdown = `\n\n# MobX\n- 상태 관리 라이브러리.\n\n## mobx-react\n\n- react에서 MobX를 decorator로 사용하려면, babel를 커스텀해야한다.\n- babel를 커스텀하려면 eject를 해야함.\n\\`\\`\\`node\nnpm run eject // yarn eject\n\\`\\`\\`\n\n- package.json 수정\n- 수정이 완료되면 서버를 재시작한다.\n\\`\\`\\`json\n\"babel\": {\n    \"presets\": [\n      \"react-app\"\n    ],\n    \"plugins\": [\n        [\"@babel/plugin-proposal-decorators\", { \"legacy\": true}],\n        [\"@babel/plugin-proposal-class-properties\", { \"loose\": true}]\n    ]\n  }\n\\`\\`\\`\n\n\n## Mobx Store\n- redux와 같은 개념으로 Store가 존재한다.\n- 하나의 스토어만 존재하는 redux와 달리, 여러 개의 스토어가 존재할 수 있다.\n\n    **참조 파일 : stores/counter.js**\n\n- Provide를 사용하여 컨테이너에 스토어를 적용한다.\n- injectfh 컴포넌트에 스토어에 주입한다.\n\n    **inject는 mobx-react의 함수로, 컴포넌트에서 스토어에 접근할 수 있게 해줌.**\n    **( 스토어의 값을 컴포넌트의 props로 전달 )**\n\n    **참조 파일 : src/Counter.js**\n`\n\nexport { LifeCycleJS, LifeCycleSampleJS, ErrorBoundaryJS, markdown } ;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst MaterialButton = () => {\n    return (\n        <Button variant=\"contained\" color=\"primary\">\n        Hello World\n        </Button>\n    );\n};\n\nexport default MaterialButton;","import React, { Component } from 'react';\n\n// material-ui-components\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport { withStyles } from '@material-ui/core/styles';\n\n// withStyles 값 정의\nconst styles = theme => ({\nroot: {\nwidth: \"100%\",\nmarginTop: theme.spacing.unit * 3,\noverflowX: \"auto\"\n},\ntable: {\nminWidth: 1080\n}\n});\n\nconst customers = [\n    {\n    'id': 1,\n    'image': 'https://placeimg.com/64/64/1',\n    'name': '홍길동',\n    'birthday': '961222',\n    'gender': '남자',\n    'job': '대학생'\n    },\n    {\n    'id': 2,\n    'image': 'https://placeimg.com/64/64/2',\n    'name': '나동빈',\n    'birthday': '960508',\n    'gender': '남자',\n    'job': '프로그래머'\n    },\n    {\n    'id': 3,\n    'image': 'https://placeimg.com/64/64/3',\n    'name': '이순신',\n    'birthday': '961127',\n    'gender': '남자',\n    'job': '디자이너'\n    }\n]\n\nconst Row = (props) => {\n    return (\n        <TableRow>\n            <TableCell>{props.id}</TableCell>\n            <TableCell><img src={props.image} alt=\"profile\"/></TableCell>\n            <TableCell>{props.name}</TableCell>\n            <TableCell>{props.birthday}</TableCell>\n            <TableCell>{props.gender}</TableCell>\n            <TableCell>{props.job}</TableCell>\n        </TableRow>\n    )\n}\n\nclass MaterialTable extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.root}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                        <TableCell>번호</TableCell>\n                        <TableCell>이미지</TableCell>\n                        <TableCell>이름</TableCell>\n                        <TableCell>생년월일</TableCell>\n                        <TableCell>성별</TableCell>\n                        <TableCell>직업</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {customers.map(c => {\n                        return <Row key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />\n                        })}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n\n// withStyles 주입\nexport default withStyles(styles)(MaterialTable);","import React from 'react';\nimport MaterialButton from './MaterialButton';\nimport MaterialTable from './MaterialTable';\n\nconst MaterialUi = () => {\n    return (\n        <div>\n            <p>Button</p>\n            <MaterialButton />\n\n            <p>Table</p>\n            <MaterialTable />\n        </div>\n    );\n};\n\nexport default MaterialUi;","import React from 'react';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport TransMd from 'components/TransMd';\nimport { MaterialUiJS, MaterialButtonJS, MaterialTableJS, markdown } from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\nimport MaterialUi from './MaterialUi';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>material-ui</h2>\n                <MaterialUi />\n            </ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['MaterialUi.js','MaterialButton.js','MaterialTable.js']}\n                    contents={[\n                        <TransMd contents={MaterialUiJS} />,\n                        <TransMd contents={MaterialButtonJS} />,\n                        <TransMd contents={MaterialTableJS} />,\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","const MaterialUiJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport MaterialButton from './MaterialButton';\nimport MaterialTable from './MaterialTable';\n\nconst MaterialUi = () => {\n    return (\n        <div>\n            <p>Button</p>\n            <MaterialButton />\n\n            <p>Table</p>\n            <MaterialTable />\n        </div>\n    );\n};\n\nexport default MaterialUi;\n\\`\\`\\`\n`\n\nconst MaterialButtonJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst MaterialButton = () => {\n    return (\n        <Button variant=\"contained\" color=\"primary\">\n        Hello World\n        </Button>\n    );\n};\n\nexport default MaterialButton;\n\\`\\`\\`\n`\n\nconst MaterialTableJS = `\n\\`\\`\\`jsx\nimport React, { Component } from 'react';\n\n// material-ui-components\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport { withStyles } from '@material-ui/core/styles';\n\n// withStyles 값 정의\nconst styles = theme => ({\nroot: {\nwidth: \"100%\",\nmarginTop: theme.spacing.unit * 3,\noverflowX: \"auto\"\n},\ntable: {\nminWidth: 1080\n}\n});\n\nconst customers = [\n    {\n    'id': 1,\n    'image': 'https://placeimg.com/64/64/1',\n    'name': '홍길동',\n    'birthday': '961222',\n    'gender': '남자',\n    'job': '대학생'\n    },\n    {\n    'id': 2,\n    'image': 'https://placeimg.com/64/64/2',\n    'name': '나동빈',\n    'birthday': '960508',\n    'gender': '남자',\n    'job': '프로그래머'\n    },\n    {\n    'id': 3,\n    'image': 'https://placeimg.com/64/64/3',\n    'name': '이순신',\n    'birthday': '961127',\n    'gender': '남자',\n    'job': '디자이너'\n    }\n]\n\nconst Row = (props) => {\n    return (\n        <TableRow>\n            <TableCell>{props.id}</TableCell>\n            <TableCell><img src={props.image} alt=\"profile\"/></TableCell>\n            <TableCell>{props.name}</TableCell>\n            <TableCell>{props.birthday}</TableCell>\n            <TableCell>{props.gender}</TableCell>\n            <TableCell>{props.job}</TableCell>\n        </TableRow>\n    )\n}\n\nclass MaterialTable extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.root}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                        <TableCell>번호</TableCell>\n                        <TableCell>이미지</TableCell>\n                        <TableCell>이름</TableCell>\n                        <TableCell>생년월일</TableCell>\n                        <TableCell>성별</TableCell>\n                        <TableCell>직업</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {customers.map(c => {\n                        return <Row key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />\n                        })}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n\n// withStyles 주입\nexport default withStyles(styles)(MaterialTable);\n\\`\\`\\`\n`\n\nconst markdown = `\n\n# Material-ui [참조](https://material-ui.com/getting-started/installation/)\n- Google Material기반의 스타일링 라이브러리\n\n## install\n\\`\\`\\`\n$ npm install @material-ui/core\n\\`\\`\\`\n\n## customStyle\n- withStyles 라이브러리를 사용하여, CSS를 적용할 수 있다.\n\n### 소스 예제\n\\`출처: https://ndb796.tistory.com/216 [안경잡이개발자]\\`\n\n`\n\nexport { MaterialUiJS, MaterialButtonJS, MaterialTableJS, markdown } ;","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>홈</h1>\n            <p>메인 페이지.</p>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport qs from 'qs';\n\nconst About = (props) => {\n    const { location } = props;\n    const query = qs.parse(location.search, {\n        ignoreQueryPrefix : true // 문자열 맨 앞의 ?를 생략해줌.\n    });\n    const showDetail = query.detail === 'true'; // 쿼리의 파싱 결과 값은 문자열이다.\n    return (\n        <div>\n            <h1>소개</h1>\n            <p>리액트 라우터 기초 실습 중 입니다.</p>\n\n            <p>localhost:3000/about?detail=true 로 접속해보기</p>\n            {showDetail && <p style={{color:'red'}}>detail 값을 true로 설정.</p>}\n        </div>\n    );\n};\n\nexport default About;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\nconst WithRouterSample = (props) => {\n    const { location, match, history } = props;\n\n    return (\n        <div>\n            <h4>location</h4>        \n            <textarea\n                value={JSON.stringify(location, null, 2)}\n                rows={7}\n                readOnly={true}\n            />\n\n            <h4>match</h4>\n            <textarea\n                value={JSON.stringify(match, null, 2)}\n                rows={7}\n                readOnly={true}\n            />\n            <button onClick={() => history.push('/')}>홈으로</button>\n        </div>\n    );\n};\n\n// 컴포넌트를 withRouter로 감싼다.\nexport default withRouter(WithRouterSample);","import React from 'react';\nimport WithRouterSample from '../ReactRouterDom2/WithRouterSample';\n\nconst data = {\n    leehaehun : {\n        nickname : 'Copotter',\n        description : '리액트 개발자 이해훈'\n    },\n    kimjihye : {\n        nickname : 'ZeZe',\n        description : '서버 개발자 김지혜'\n    }\n}\n\nconst Profile = (props) => {\n    // URL parameter => match 객체 params값 참조.\n    const { username } = props.match.params;\n    const profile = data[username];\n\n    if (!profile) {\n        return <div>존재하지 않는 사용자.</div>\n    }\n    return (\n        <div>\n            <h3>{username}({profile.nickname})</h3>\n            <p>{profile.description}</p>\n            <WithRouterSample />\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Profile from './Profile';\n\nconst Profiles = () => {\n    const activeStyle = {\n        background : 'black',\n        color : 'white',\n    };\n\n    return (\n        <div>\n            <h3>사용자 목록 : </h3>\n            <ul>\n                <li><NavLink activeStyle={activeStyle} to=\"/profiles/leehaehun\" active>leehaehun</NavLink></li>\n                <li><NavLink activeStyle={activeStyle} to=\"/profiles/kimjihye\">kimjihye</NavLink></li>\n            </ul>\n\n            <Route\n                path=\"/profiles\"\n                exact\n                // == exact=true\n                render={() => <div>사용자를 선택해주세요.</div>}\n                // component 대신 jsx를 넣고 싶을때 render함수 사용.\n            />\n            <Route path=\"/profiles/:username\" component={Profile} />\n        </div>\n    );\n};\n\nexport default Profiles;","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n// import Profile from './Profile';\nimport Profiles from './Profiles';\n\nconst ReactRouterDom = () => {\n    return (\n        <div>\n            <ul>\n                <li><Link to=\"/\">홈</Link></li>\n                <li><Link to=\"/about\">소개</Link></li>\n\n                {/* 서브라우트화 */}\n                <li><Link to=\"/profiles\">프로필</Link></li>\n                {/* <li><Link to=\"/profile/leehaehun\">Copotter 프로필</Link></li> */}\n                {/* <li><Link to=\"/profile/kimjihye\">ZeZe 프로필</Link></li> */}\n            </ul>\n            <hr />\n            <Route path=\"/\" component={Home} exact={true} />\n        {/* <Route path=\"/about\" component={About} />\n            <Route path=\"/info\" component={About} />\n                여러개 path 설정 ==> */}\n        <Route path={['/about', '/info']} component={About} />\n        {/* URL 파라미터 지정 */}\n        {/* <Route path=\"/profile/:username\" component={Profile} /> */}\n        <Route path=\"/profiles\" component={Profiles} />\n        </div>\n    );\n};\n\nexport default ReactRouterDom;","import React from 'react';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport ReactRouterDom from './ReactRouterDom';\nimport TransMd from 'components/TransMd';\nimport  { indexJS, ReactRouterDomJS, HomeJS, AboutJS, ProfileJS, ProfilesJS, markdown } from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>react-router-dom</h2>\n                <ReactRouterDom />\n            </ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['src/index.js', 'ReactRouterDom.js', 'Home.js','About.js', 'Profile.js', 'Profiles.js']}\n                    contents={[\n                        <TransMd contents={indexJS} />,\n                        <TransMd contents={ReactRouterDomJS} />,\n                        <TransMd contents={HomeJS} />,\n                        <TransMd contents={AboutJS} />,\n                        <TransMd contents={ProfileJS} />,\n                        <TransMd contents={ProfilesJS} />,\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","const indexJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App /> \n    </BrowserRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\\`\\`\\`\n`\n\nconst ReactRouterDomJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n// import Profile from './Profile';\nimport Profiles from './Profiles';\n\nconst ReactRouterDom = () => {\n    return (\n        <div>\n            <ul>\n                <li><Link to=\"/\">홈</Link></li>\n                <li><Link to=\"/about\">소개</Link></li>\n\n                {/* 서브라우트화 */}\n                <li><Link to=\"/profiles\">프로필</Link></li>\n                {/* <li><Link to=\"/profile/leehaehun\">Copotter 프로필</Link></li> */}\n                {/* <li><Link to=\"/profile/kimjihye\">ZeZe 프로필</Link></li> */}\n            </ul>\n            <hr />\n            <Route path=\"/\" component={Home} exact={true} />\n        {/* <Route path=\"/about\" component={About} />\n            <Route path=\"/info\" component={About} />\n                여러개 path 설정 ==> */}\n        <Route path={['/about', '/info']} component={About} />\n        {/* URL 파라미터 지정 */}\n        {/* <Route path=\"/profile/:username\" component={Profile} /> */}\n        <Route path=\"/profiles\" component={Profiles} />\n        </div>\n    );\n};\n\nexport default ReactRouterDom;\n\\`\\`\\`\n`\n\nconst AboutJS = `\n\\`\\`\\`jsx\nimport React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            <h1>소개</h1>\n            <p>리액트 라우터 기초 실습 중 입니다.</p>\n        </div>\n    );\n};\n\nexport default About;\n\\`\\`\\`\n`\n\nconst HomeJS = `\n\\`\\`\\`jsx\nimport React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>홈</h1>\n            <p>메인 페이지.</p>\n        </div>\n    );\n};\n\nexport default Home;\n\\`\\`\\`\n`\n\nconst ProfileJS = `\n\\`\\`\\`jsx\nimport React from 'react';\n\nconst data = {\n    leehaehun : {\n        nickname : 'Copotter',\n        description : '리액트 개발자 이해훈'\n    },\n    kimjihye : {\n        nickname : 'ZeZe',\n        description : '서버 개발자 김지혜'\n    }\n}\n\nconst Profile = (props) => {\n    // URL parameter => match 객체 params값 참조.\n    const { username } = props.match.params;\n    const profile = data[username];\n\n    if (!profile) {\n        return <div>존재하지 않는 사용자.</div>\n    }\n    return (\n        <div>\n            <h3>{username}({profile.nickname})</h3>\n            <p>{profile.description}</p>\n        </div>\n    );\n};\n\nexport default Profile;\n\\`\\`\\`\n`\n\nconst ProfilesJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport Profile from './Profile';\n\nconst Profiles = () => {\n    return (\n        <div>\n            <h3>사용자 목록 : </h3>\n            <ul>\n                <li><Link to=\"/profiles/leehaehun\">leehaehun</Link></li>\n                <li><Link to=\"/profiles/kimjihye\">kimjihye</Link></li>\n            </ul>\n\n            <Route\n                path=\"/profiles\"\n                exact\n                // == exact=true\n                render={() => <div>사용자를 선택해주세요.</div>}\n                // component 대신 jsx를 넣고 싶을때 render함수 사용.\n            />\n            <Route path=\"/profiles/:username\" component={Profile} />\n        </div>\n    );\n};\n\nexport default Profiles;\n\\`\\`\\`\n`\n\nconst markdown = `\n\n# react-router-dom\n\n## - install\n\\`\\`\\`node\n$ npm install --save react-router-dom\n\\`\\`\\`\n\n## - 적용\n- src/Index.js에 BrowserRouter로 감싼다.\n\\`\\`\\`jsx\nReactDOM.render(\n  <BrowserRouter>\n      <App /> \n  </BrowserRouter>,\ndocument.getElementById('root'));\n\\`\\`\\`\n\n## - Route Component\n- Route컴포넌트로 path를 컴포넌트와 연결한다.\n\\`\\`\\`jsx\n<Route path=\"주소\" component={컴포넌트} />\n\\`\\`\\`\n\n## - exact props\n- \"/\"와 다른 path들의 겹치는 것을 방지할 수 있음.\n\\`\\`\\`jsx\n<div>\n    <Route path=\"/\" component={Home} exact={true} />\n    <Route path=\"/about\" component={About} />\n</div>\n\\`\\`\\`\n\n## - Link Component\n- 클릭하여 다른 주소로 이동시켜 주는 컴포넌트. (a태그와 달리, 페이지 전환 방지)\n\\`\\`\\`jsx\n<Link to=\"주소\">버튼</Link>\n\\`\\`\\`\n\n## - URL 파라미터와 쿼리\n- 페이지에 동적인 값을 전달할 때 사용된다.\n- 파라미터 : /profiles/copotter\n\\`\\`\\`\nURL 파라미터는 match라는 객체의 params값을 참조한다.\n\\`\\`\\`\n\n- 쿼리 : /about?detail=true\n- 쿼리는 location 객체에 있는 search값에서 조회. (props로 받게된다.)\n\\`\\`\\`jsx\nlocation\n\n{\n  \"pathname\": \"/about\",\n  \"search\": \"?detail=true\",\n  \"hash\" : \"\"\n}\n\\`\\`\\`\n- qs라이브러리 : 쿼리 문자열을 객체로 변환할 때 사용.\n\\`\\`\\`node\n$ npm install --save qs\n\\`\\`\\`\n\n## 서브 라우트\n- 라우트 내부의 라우트.\n\\`\\`\\`jsx\n<Route\n    path=\"/profiles\"\n    exact\n    render={() => <div>사용자를 선택해주세요.</div>}\n    // component 대신 jsx를 넣고 싶을때 render함수 사용.\n/>\n\\`\\`\\`\n`\n\nexport { indexJS, ReactRouterDomJS, HomeJS, AboutJS, ProfileJS, ProfilesJS, markdown } ;","import React, { Component } from 'react';\n\nclass HistorySample extends Component {\n    \n    // 뒤로가기\n    handleGoBack = () => {\n        this.props.history.goBack();\n    }\n\n    // 홈으로 이동\n    handleGoHome = () => {\n        this.props.history.push('/');\n    }\n\n    componentDidMount() {\n        // 페이지 변화 시, 확인할 수 있게됨.\n        this.unlock = this.props.history.block('정말 나가시겠습니까?');\n    }\n\n    componentWillMount() {\n        // 컴포넌트가 언마운트되면 질문을 멈춤\n        if (this.unblock) {\n            this.unlock();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleGoBack}>뒤로가기</button>\n                <button onClick={this.handleGoHome}>홈으로</button>\n            </div>\n        );\n    }\n}\n\nexport default HistorySample;","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport Home from '../ReactRouterDom/Home';\nimport About from '../ReactRouterDom/About';\nimport Profiles from '../ReactRouterDom/Profiles';\nimport HistorySample from './HistorySample';\n\nconst ReactRouterDom2 = () => {\n    return (\n        <div>\n            <ul>\n                <li><Link to=\"/\">홈</Link></li>\n                <li><Link to=\"/about\">소개</Link></li>\n                <li><Link to=\"/profiles\">프로필</Link></li>\n                <li><Link to=\"/history\">History 예제</Link></li>\n            </ul>\n            <hr />\n            <Switch>\n                <Route path=\"/\" component={Home} exact={true} />\n                <Route path={['/about', '/info']} component={About} />\n                <Route path=\"/profiles\" component={Profiles} />\n                <Route path=\"/history\" component={HistorySample} />\n                <Route\n                // path를 정의하지 않으면, 모든 상황에 렌더링된다.\n                render={({location}) => (\n                    <div>\n                        <h2>존재하지 않는 페이지입니다!</h2>\n                        <p>{location.pathname}</p>\n                    </div>\n                )}\n                />\n            </Switch>\n        </div>\n    );\n};\n\nexport default ReactRouterDom2;","import React from 'react';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport ReactRouterDom2 from './ReactRouterDom2';\nimport TransMd from 'components/TransMd';\nimport  { indexJS, ReactRouterDom2JS, ProfileJS, ProfilesJS, HistorySampleJS, WithRouterSampleJS, markdown } from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>react-router-dom의 부가 기능</h2>\n                <ReactRouterDom2 />\n            </ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['src/index.js', 'ReactRouterDom2.js', 'Profile.js','Profiles.js', 'HistorySample.js', 'WithRouterSample.js']}\n                    contents={[\n                        <TransMd contents={indexJS} />,\n                        <TransMd contents={ReactRouterDom2JS} />,\n                        <TransMd contents={ProfileJS} />,\n                        <TransMd contents={ProfilesJS} />,\n                        <TransMd contents={HistorySampleJS} />,\n                        <TransMd contents={WithRouterSampleJS} />,\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","const indexJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App /> \n    </BrowserRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\\`\\`\\`\n`\n\nconst ReactRouterDom2JS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport Home from '../ReactRouterDom/Home';\nimport About from '../ReactRouterDom/About';\nimport Profiles from '../ReactRouterDom/Profiles';\nimport HistorySample from './HistorySample';\n\nconst ReactRouterDom2 = () => {\n    return (\n        <div>\n            <ul>\n                <li><Link to=\"/\">홈</Link></li>\n                <li><Link to=\"/about\">소개</Link></li>\n                <li><Link to=\"/profiles\">프로필</Link></li>\n                <li><Link to=\"/history\">History 예제</Link></li>\n            </ul>\n            <hr />\n            <Switch>\n                <Route path=\"/\" component={Home} exact={true} />\n                <Route path={['/about', '/info']} component={About} />\n                <Route path=\"/profiles\" component={Profiles} />\n                <Route path=\"/history\" component={HistorySample} />\n                <Route\n                // path를 정의하지 않으면, 모든 상황에 렌더링된다.\n                render={({location}) => (\n                    <div>\n                        <h2>존재하지 않는 페이지입니다!</h2>\n                        <p>{location.pathname}</p>\n                    </div>\n                )}\n                />\n            </Switch>\n        </div>\n    );\n};\n\nexport default ReactRouterDom2;\n\\`\\`\\`\n`\n\nconst ProfilesJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Profile from './Profile';\n\nconst Profiles = () => {\n    const activeStyle = {\n        background : 'black',\n        color : 'white',\n    };\n\n    return (\n        <div>\n            <h3>사용자 목록 : </h3>\n            <ul>\n                <li><NavLink activeStyle={activeStyle} to=\"/profiles/leehaehun\" active>leehaehun</NavLink></li>\n                <li><NavLink activeStyle={activeStyle} to=\"/profiles/kimjihye\">kimjihye</NavLink></li>\n            </ul>\n\n            <Route\n                path=\"/profiles\"\n                exact\n                // == exact=true\n                render={() => <div>사용자를 선택해주세요.</div>}\n                // component 대신 jsx를 넣고 싶을때 render함수 사용.\n            />\n            <Route path=\"/profiles/:username\" component={Profile} />\n        </div>\n    );\n};\n\nexport default Profiles;\n`\n\nconst ProfileJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport WithRouterSample from '../ReactRouterDom2/WithRouterSample';\n\nconst data = {\n    leehaehun : {\n        nickname : 'Copotter',\n        description : '리액트 개발자 이해훈'\n    },\n    kimjihye : {\n        nickname : 'ZeZe',\n        description : '서버 개발자 김지혜'\n    }\n}\n\nconst Profile = (props) => {\n    // URL parameter => match 객체 params값 참조.\n    const { username } = props.match.params;\n    const profile = data[username];\n\n    if (!profile) {\n        return <div>존재하지 않는 사용자.</div>\n    }\n    return (\n        <div>\n            <h3>{username}({profile.nickname})</h3>\n            <p>{profile.description}</p>\n            <WithRouterSample />\n        </div>\n    );\n};\n\nexport default Profile;\n\\`\\`\\`\n`\n\nconst HistorySampleJS = `\n\\`\\`\\`jsx\nimport React, { Component } from 'react';\n\nclass HistorySample extends Component {\n    \n    // 뒤로가기\n    handleGoBack = () => {\n        this.props.history.goBack();\n    }\n\n    // 홈으로 이동\n    handleGoHome = () => {\n        this.props.history.push('/');\n    }\n\n    componentDidMount() {\n        // 페이지 변화 시, 확인할 수 있게됨.\n        this.unlock = this.props.history.block('정말 나가시겠습니까?');\n    }\n\n    componentWillMount() {\n        // 컴포넌트가 언마운트되면 질문을 멈춤\n        if (this.unblock) {\n            this.unlock();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleGoBack}>뒤로가기</button>\n                <button onClick={this.handleGoHome}>홈으로</button>\n            </div>\n        );\n    }\n}\n\nexport default HistorySample;\n\\`\\`\\`\n`\nconst WithRouterSampleJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\nconst WithRouterSample = (props) => {\n    const { location, match, history } = props;\n\n    return (\n        <div>\n            <h4>location</h4>        \n            <textarea\n                value={JSON.stringify(location, null, 2)}\n                rows={7}\n                readOnly={true}\n            />\n\n            <h4>match</h4>\n            <textarea\n                value={JSON.stringify(match, null, 2)}\n                rows={7}\n                readOnly={true}\n            />\n            <button onClick={() => history.push('/')}>홈으로</button>\n        </div>\n    );\n};\n\n// 컴포넌트를 withRouter로 감싼다.\nexport default withRouter(WithRouterSample);\n\\`\\`\\`\n`\n\nconst markdown = `\n\n# react-router-dom의 부가 기능\n\n## history\n- match나 location처럼 컴포넌트에 전달되는 props중 하나,\n- 컴포넌트 내에 구현하는 함수에서 라우터 API를 호출할 수 있다.\n\\` HistorySample.js 참조 \\`\n\n## withRouter\n- HoC(Higher-order Component).\n- 라우트 사용 컴포넌트가 아니어도 match, location 등 객체를 사용할 수 있게 해줌.\n\\`\\`\\`\nWithRouterSample.js 참조 \nwithRouter는 자신을 보여준느 컴포넌트를 기준으로 match를 전달한다.\n\\`\\`\\`\n\n## Switch\n- 여러 Route를 감싸서 그 중 일치하는 단 하나의 라우트만을 렌더링 시켜준다.\n\n## NavLink\n- Link와 비슷한 컴포넌트로, 경로와 Link의 경로가 일치할 경우 특정 스타일을 적용할 수 있다.\n\\` Profiles.js 15행 참조 \\`\n`\n\nexport { indexJS, ReactRouterDom2JS, ProfileJS, ProfilesJS, HistorySampleJS, WithRouterSampleJS, markdown } ;","import React from 'react';\n\nconst Counter = (props) => {\n    const { number, onIncrease, onDecrease } = props;\n\n    return (\n        <div>\n            <h1>{number}</h1>        \n            <div>\n                <button onClick={onIncrease}>+1</button>\n                <button onClick={onDecrease}>-1</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Counter;","// Container 만들기\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { increase, decrease } from 'modules/counter';\nimport Counter from 'components/Counter';\n\nconst CounterContainer = (props) => {\n    const { number, increase, decrease } = props;\n\n    return <Counter number={number} onIncrease={increase} onDecrease={decrease} />;\n};\n\n\n/*\nconst mapStateToProps = state => ({\n    number : state.counter.number,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    increase : () => {\n        dispatch(increase());\n    },\n    decrease : () => {\n        dispatch(decrease());\n    },\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CounterContainer);\n*/\n// ==\n/*\nexport default connect(\n    state => ({\n        number : state.counter.number,\n    }),\n    dispatch => ({\n        increase : () => dispatch(increase()),\n        decrease : () => dispatch(decrease()),\n    }),\n)(CounterContainer);\n*/\n// ==\nexport default connect(\n    state => ({\n        number : state.counter.number,\n    }),\n    {\n        // 파타미터 함수 형태가 아닌, 액션 객체형태르 dispatch에 보냄.\n        increase,\n        decrease,\n    },\n)(CounterContainer);","import React from 'react';\n\nconst TodoItem = (props) => {\n    const { todo, onToggle, onRemove } = props;\n\n    return (\n        <div>\n            <input type=\"checkbox\" \n                onClick={() => onToggle(todo.id)}\n                checked={todo.done}\n                readOnly={true}\n            />\n            <span style={{ textDecoration : todo.done ? 'line-through' : 'none'}}>\n                {todo.text}\n            </span>        \n            <button onClick={() => onRemove(todo.id)}>삭제</button>\n        </div>\n    );\n};\n\nconst Todos = (props) => {\n    const {\n        input,  // 인풋에 입력될 텍스트\n        todos,  // 할 일 목록 객체\n        onChangeInput,\n        onInsert,\n        onToggle,\n        onRemove,\n    } = props;\n\n    const onSubmit = e => {\n        e.preventDefault();\n        onInsert(input);\n        onChangeInput(''); // 등록 후 인풋 상태 초기화\n    }\n\n    const onChange = e => onChangeInput(e.target.value);\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input value={input} onChange={onChange}/>\n                <button type=\"submit\">등록</button>\n            </form>\n            <div>\n                {todos.map(todo => (\n                    <TodoItem\n                        todo={todo}\n                        key={todo.id}\n                        onToggle={onToggle}\n                        onRemove={onRemove}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Todos;","import React from 'react';\nimport Todos from 'components/Todos';\nimport { connect } from 'react-redux';\nimport { changeInput, insert, toggle, remove } from 'modules/todos';\n\nconst TodosContainer = (props) => {\n    const {\n        input,\n        todos,\n        changeInput,\n        insert,\n        toggle,\n        remove,\n    } = props;\n\n    return (\n        <Todos\n            input={input}\n            todos={todos}\n            onChangeInput={changeInput}\n            onInsert={insert}\n            onToggle={toggle}\n            onRemove={remove}\n        />\n    );\n};\n\nexport default connect(\n    // 비구조화 할당을 통해 todos를 분리하여\n    // state.todos.input 대신 todos.input 사용\n    ({ todos }) => ({\n        input : todos.input,\n        todos : todos.todos,\n    }),\n    {\n        changeInput,\n        insert,\n        toggle,\n        remove\n    },\n)(TodosContainer);","import React from 'react';\nimport CounterContainer from './containers/CounterContainer';\nimport TodosContainer from './containers/TodosContainer';\n\nconst Redux = () => {\n    return (\n        <div>\n            <CounterContainer />\n            <hr />\n            <TodosContainer />\n        </div>\n    );\n};\n\nexport default Redux;","import React from 'react';\nimport { MainBox, ContentsBox, CodeBox, MdBox } from 'components/styled';\nimport Redux from './Redux';\nimport TransMd from 'components/TransMd';\nimport  { markdown } from './Sources';\nimport AutoTab from 'components/AutoTab/AutoTab';\n\nconst index = () => {\n    return (\n        <MainBox>\n            <ContentsBox>\n                <h2>Redux</h2>\n                <Redux />\n            </ContentsBox>\n            <CodeBox>\n                <AutoTab\n                    menu={['src/index.js']}\n                    contents={[\n                        // <TransMd contents={indexJS} />,\n                    ]}\n                />\n            </CodeBox>\n            <MdBox><TransMd contents={markdown}/></MdBox>\n        </MainBox>\n    );\n};\n\nexport default index;","const indexJS = `\n\\`\\`\\`jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// store 생성, 리듀서 적용, Provider 생성, DevTools 라이브러리\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// 단일 스토어 생성\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>,\ndocument.getElementById('root'));\n\\`\\`\\`\n`\n\nconst markdown = `\n# Redux\n- MobX, Context API 와 비슷한 상태 관리 라이브러리로, 규모가 큰 프로젝트나 효율적인 비동기작업을 할 때 이용된다.\n\n## Action\n- 상태에 어떠한 변화가 필요할 때, 액션이라는 것이 발생함.\n- type 필드를 반드시 가지고 있어야함.\n\\`\\`\\`jsx\n{\n    type : 'ADD',\n    data : {\n        id : 1,\n        text : '리덕스 배움'\n    }\n}\n\\`\\`\\`\n- Action 생성함수 : 액션 객체를 만들어주는 함수.\n\\`\\`\\`jsx\nfunction addList = (data) => {\n    return {\n        type : 'ADD',\n        data\n    }\n}\n\\`\\`\\`\n\n## Reducer\n- 변화를 일으키는 함수\n- 액션을 만들어서 발생시키면, 리듀서가 현 상태와, 액션객체를 받아서 새로운 상태를 반환한다.\n\\`\\`\\`\nconst initailState = {\n    count : 1\n};\n\nfunction reducer(state = initialState, action) {\n    switch ( action.type) {\n        case ADD :\n            return {\n                count : state.count + 1\n            };\n        default : \n            return : state;\n    }\n}\n\\`\\`\\`\n\n## Store\n- 프로젝트에 리덕스를 적용하는 스토어.\n- 한 개의 프로젝트에는 리덕스 스토어는 한개만 가질 수 있다.\n\n## Dispatch\n- 스토어의 내장 함수 중 하나.\n- 액션을 발생시키는 것\n\n## subscribe\n- subscribe함수에 리스너 함수를 파라미터로 호출하면, 이 함수가 액션이 디스패치되어\n  상태가 업데이트 될 때 마다 호출된다.\n\\`\\`\\`jsx\nconst listner = () => {\n    console.log('상태 업데이트');\n}\nconst unscribe = store.subscribe(listner);\n\nunscribe(); // 구독을 비활성화할 때 함수를 호출.\n\n## react-redux\n- redux 주요 패턴\n\\`\\`\\`\nPresentational Component : 상태관리 없이, props를 받아와 UI를 보여줌.\nContainer Component : 리덕스와 연동된 컴포넌트로, 상태를 받고, 액션을 디스패치함\n\\`\\`\\`\n\n### 일반적인 구조 : actions폴더, constants폴더, reducers폴더\n- 기능 추가마다 폴더별로 파일을 수정해야함. // 기능별로 나눠보기 용이함.\n### Ducks 패턴 : modules 폴더\n- 프로젝트 기능별로 파일 하나에 몰아서 다 장석하는 방식.\n`\n\nexport { indexJS, markdown }","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport './AppShell.css'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: 'auto'\n    },\n};\n\nclass AppShell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        };\n    }\n    handleDrawerToggle = () => this.setState({toggle: !this.state.toggle})\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div className={classes.root}>\n                    <AppBar position=\"static\">\n                        <IconButton className={classes.menuButton} color=\"inherit\" onClick={this.handleDrawerToggle}>\n                            <MenuIcon/>\n                        </IconButton>\n                    </AppBar>\n                    <Drawer open={this.state.toggle} className=\"rsbDrawer\">\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/lv1\">\n                                Lv1. React\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/lv2\">\n                                Lv2. JSX\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/lv3\">\n                                Lv3. Component\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/skill/mobx\">\n                                MobX\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/lv4\">\n                                Lv3. LifeCycle\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/skill/materialui\">\n                                Material-UI\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/skill/reactrouterdom\">\n                                React-router-dom\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/skill/reactrouterdom2\">\n                                React-router-dom2\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleDrawerToggle}>\n                            <Link component={RouterLink} to=\"/skill/redux\">\n                                Redux\n                            </Link>\n                        </MenuItem>\n                    </Drawer>\n                </div>\n                <div id=\"content\" style={{margin: 'auto', marginTop: '20px'}}>\n                    {React.cloneElement(this.props.children)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AppShell);","import React from 'react';\n// import MainContainer from './container/MainContainer';\nimport Lv1React  from './container/Level/Lv1React';\nimport Lv2JSX  from './container/Level/Lv2JSX';\nimport Lv3Component  from './container/Level/Lv3Component';\nimport MobX  from './container/Skills/MobX';\nimport Lv4LifeCycle  from './container/Level/Lv4LifeCycle';\nimport MaterialUi from './container/Skills/MaterialUi';\nimport ReactRouterDom from './container/Skills/ReactRouterDom';\nimport ReactRouterDom2 from './container/Skills/ReactRouterDom2';\nimport Redux from './container/Skills/Redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport AppShell from 'components/Navigation/AppShell'\n\n\nimport Home from 'container/Skills/ReactRouterDom/Home';\nimport About from 'container/Skills/ReactRouterDom/About';\nimport Profiles from 'container/Skills/ReactRouterDom/Profiles';\nimport Profile from 'container/Skills/ReactRouterDom/Profile';\nimport HistorySample from 'container/Skills/ReactRouterDom2/HistorySample';\n\nfunction App() {\n  return (\n    <>\n      {/* <MainContainer />\n      <Lv1React/>\n      <Lv2JSX />\n      <Lv3Component />\n      <MobX />\n      <Lv4LifeCycle />\n      <MaterialUi />\n      <ReactRouterDom />\n      <ReactRouterDom2 />\n      <Redux /> */}\n      <Router>\n            <AppShell>\n                <div>\n                    <Route exact path=\"/lv1\" component={Lv1React}/>\n                    <Route exact path=\"/lv2\" component={Lv2JSX}/>\n                    <Route exact path=\"/lv3\" component={Lv3Component}/>\n                    <Route exact path=\"/skill/mobx\" component={MobX}/>\n                    <Route exact path=\"/lv4\" component={Lv4LifeCycle}/>\n                    <Route exact path=\"/skill/materialui\" component={MaterialUi}/>\n                    <Route exact path=\"/skill/reactrouterdom\" component={ReactRouterDom}/>\n                    <Route exact path=\"/skill/reactrouterdom2\" component={ReactRouterDom2}/>\n                    <Route exact path=\"/skill/redux\" component={Redux}/>\n\n                    {/* react-router-dom */}\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/about\" component={About} />\n                    <Route exact path=\"/profiles\" component={Profiles} />\n                    <Route path=\"/profiles/:username\" component={Profile} />\n                    <Route path=\"/history\" component={HistorySample} />\n                </div>\n            </AppShell>\n        </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// store 생성, 리듀서 적용, Provider 생성, DevTools 라이브러리\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n// 단일 스토어 생성\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App /> \n    </BrowserRouter>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}